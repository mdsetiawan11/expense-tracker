// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  transactioncategories TransactionCategory[]
  transactions Transaction[]
  budgets      Budget[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model TransactionCategory {
  id        String         @id @default(cuid())
  name      String
  type      TransactionType // INCOME or EXPENSE
  userId    String
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  @@map("transaction_category")
  Budget Budget[]
}

model Transaction {
  id          String             @id @default(cuid())
  title       String
  amount      Float
  date        DateTime
  note        String?
  type        TransactionType     // INCOME or EXPENSE
  userId      String
  categoryId  String
  user        User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    TransactionCategory @relation(fields: [categoryId], references: [id])
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  @@map("transaction")
}

model Budget {
  id          String     @id @default(cuid())
  userId      String
  categoryId  String
  amount      Float
  month       Int        // 1 - 12
  year        Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    TransactionCategory @relation(fields: [categoryId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([userId, categoryId, month, year])
  @@map("budget")
}

enum TransactionType {
  INCOME
  EXPENSE
}

